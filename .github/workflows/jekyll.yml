name: Build and Deploy Jekyll site with Tailwind CSS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install Node dependencies
        run: npm install

      - name: Create assets directory
        run: mkdir -p assets/css

      - name: Build CSS with Tailwind
        run: npm run build-css-prod

      - name: Debug - Check file structure before Jekyll build
        run: |
          echo "=== Checking assets directory ==="
          ls -la assets/
          echo "=== Checking CSS files ==="
          ls -la assets/css/
          echo "=== Checking CSS file content (first 5 lines) ==="
          head -5 assets/css/style.css || echo "CSS file not found"
          echo "=== Current working directory ==="
          pwd
          echo "=== All files in root ==="
          ls -la

      - name: Build Jekyll site
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Debug - Check Jekyll output
        run: |
          echo "=== Checking _site directory ==="
          ls -la _site/
          echo "=== Checking _site/assets ==="
          ls -la _site/assets/ || echo "_site/assets not found"
          echo "=== Checking _site/assets/css ==="
          ls -la _site/assets/css/ || echo "_site/assets/css not found"
          echo "=== Checking CSS link in index.html ==="
          grep -n "style.css" _site/index.html || echo "CSS link not found in index.html"
          echo "=== Checking first few lines of CSS file ==="
          head -3 _site/assets/css/style.css || echo "CSS file not readable"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
